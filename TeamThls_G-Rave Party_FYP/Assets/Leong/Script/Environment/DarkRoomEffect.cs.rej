diff a/TeamThls_G-Rave Party_FYP/Assets/Leong/Script/Environment/DarkRoomEffect.cs b/TeamThls_G-Rave Party_FYP/Assets/Leong/Script/Environment/DarkRoomEffect.cs	(rejected hunks)
@@ -5,20 +5,23 @@
 public class DarkRoomEffect : MonoBehaviour {
 
 	[SerializeField] GameObject level_Obj;
-	[SerializeField] GameObject level_Vegetation;
-	[SerializeField] GameObject level_Props;
+	public List<Light> darkRoom_Light;
 	public List<SpriteRenderer> darkRoom_Obj;
 	public Material darkRoom_Mat;
 	public float currentColor_increaseValue;
+	public float currentLight_Range;
+	public int player_Count;
 	public enum darkRoom_State
 	{
 		Activated, Deactivated, Null
 	};
 	public darkRoom_State darkRoom_CurrentState = darkRoom_State.Null;
 	// Use this for initialization
-	void Start () {
+	void Start () 
+	{
 		darkRoom_Mat.color = Color.white;
 		//ListingAllDarkRoomObjects();
+		FindAffectedLights();
 	}
 	
 	// Update is called once per frame
@@ -27,12 +30,16 @@
 		if(darkRoom_CurrentState == darkRoom_State.Activated && currentColor_increaseValue <= 1.0f)
 		{
 			currentColor_increaseValue += 0.001f;
+			currentLight_Range += 0.002f;
 			DarkenMaterialColor(currentColor_increaseValue);
+			DarkenLights(currentLight_Range);
 		}
 		else if(darkRoom_CurrentState == darkRoom_State.Deactivated && currentColor_increaseValue >= 0.0f)
 		{
 			currentColor_increaseValue -= 0.001f;
+			currentLight_Range -= 0.002f;
 			ResetMaterialColor(currentColor_increaseValue);
+			ResetLights(currentLight_Range);
 		}
 		if(darkRoom_Mat.color == Color.white)
 		{
@@ -41,6 +48,22 @@
 		}
 	}
 
+	public void PlusPlayerCount(GameObject obj)
+	{
+		if(obj.layer == 10)
+		{
+			player_Count ++;
+		}
+	}
+
+	public void ReducePlayerCount(GameObject obj)
+	{
+		if(obj.layer == 10)
+		{
+			player_Count --;
+		}
+	}
+
 	void DarkenMaterialColor(float value)
 	{
 		if(darkRoom_Mat.color != Color.black)
@@ -57,39 +80,35 @@
 		}
 	}
 
-	void ListingAllDarkRoomObjects()
+	void FindAffectedLights()
 	{
-		if(level_Obj == null)
-		{
-			level_Obj = GameObject.Find("Level 9");
-		}
-		if(level_Vegetation == null)
-		{
-			level_Vegetation = level_Obj.transform.Find("Vegetation").gameObject;
-		}
-		if(level_Props == null)
+		Transform light = GameObject.Find(this.transform.parent.name + " Light").GetComponent<Transform>();
+		foreach(Transform child in light)
 		{
-			level_Props = level_Obj.transform.Find("Props").gameObject;
+			darkRoom_Light.Add(child.GetComponent<Light>());
 		}
-		for(int i = 0; i < level_Obj.transform.childCount; i++)
-		{
-			if(level_Obj.transform.GetChild(i).GetComponent<SpriteRenderer>() != null)
-			{
-				darkRoom_Obj.Add(level_Obj.transform.GetChild(i).GetComponent<SpriteRenderer>());
-			}
-		}
-		for(int j = 0; j < level_Vegetation.transform.childCount; j++)
+	}
+
+	void DarkenLights(float value)
+	{
+		if(darkRoom_Light != null)
 		{
-			if(level_Vegetation.transform.GetChild(j).GetComponent<SpriteRenderer>() != null)
+			for(int i = 0; i < darkRoom_Light.Count; i++)
 			{
-				darkRoom_Obj.Add(level_Vegetation.transform.GetChild(j).GetComponent<SpriteRenderer>());
+				darkRoom_Light[i].range = Mathf.Lerp(40.0f, 0.0f, value);
+				Debug.Log("MinusLightRange");
 			}
 		}
-		for(int k = 0; k < level_Props.transform.childCount; k++)
+	}
+
+	void ResetLights(float value)
+	{
+		if(darkRoom_Light != null)
 		{
-			if(level_Props.transform.GetChild(k).GetComponent<SpriteRenderer>() != null)
+			for(int i = 0; i < darkRoom_Light.Count; i++)
 			{
-				darkRoom_Obj.Add(level_Props.transform.GetChild(k).GetComponent<SpriteRenderer>());
+				darkRoom_Light[i].range = Mathf.Lerp(40.0f, 0.0f, value);
+				Debug.Log("PlusLightRange");
 			}
 		}
 	}
@@ -99,6 +118,7 @@
 		if(col.gameObject.layer == 10)
 		{
 			darkRoom_CurrentState = darkRoom_State.Activated;
+			player_Count++;
 		}
 	}
 
@@ -112,9 +132,14 @@
 
 	void OnTriggerExit2D(Collider2D col)
 	{
-		if(col.gameObject.layer == 10)
+		if(col.gameObject.layer == 10 && player_Count == 1)
 		{
 			darkRoom_CurrentState = darkRoom_State.Deactivated;
+			player_Count--;
+		}
+		else if(col.gameObject.layer == 10 && player_Count == 2)
+		{
+			player_Count--;
 		}
 	}
 }
